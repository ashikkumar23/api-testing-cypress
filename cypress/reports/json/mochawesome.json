{
  "stats": {
    "suites": 8,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-12-27T15:24:55.109Z",
    "end": "2022-12-27T15:24:57.534Z",
    "duration": 2425,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "745d3575-2f81-4656-9f48-89f53064de87",
      "title": "",
      "fullFile": "cypress/e2e/test_crud.cy.js",
      "file": "cypress/e2e/test_crud.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aca5a90a-3b51-405f-8026-c0e69b4c07f1",
          "title": "Create a new user",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "803c79de-cad3-462d-8fe1-07a346373c8a",
              "title": "POST /public/v2/users",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Test POST request",
                  "fullTitle": "Create a new user POST /public/v2/users Test POST request",
                  "timedOut": null,
                  "duration": 1064,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: '/public/v2/users',\n  headers: {\n    'authorization': 'Bearer ' + Cypress.env('access_token') // Generate access token from https://gorest.co.in/consumer/login and add the same to cypress.env.json\n  },\n  body: {\n    \"name\": userName,\n    \"gender\": \"male\",\n    \"email\": emailId,\n    \"status\": \"active\"\n  }\n}).then(response => {\n  expect(response).to.have.property('status').to.equal(201);\n  expect(response.body).to.have.property('id').to.not.be.oneOf([null, \"\"]);\n  expect(response.body).to.have.property('name').to.equal(userName);\n  expect(response.body).to.have.property('email').to.equal(emailId);\n  userId = response.body.id;\n  cy.task('log', 'Created a new user with id: ' + userId);\n});",
                  "err": {},
                  "uuid": "e63e1144-b0cd-40c4-a2a3-135afe1d8a87",
                  "parentUUID": "803c79de-cad3-462d-8fe1-07a346373c8a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e63e1144-b0cd-40c4-a2a3-135afe1d8a87"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1064,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4a8c09fb-1708-4f09-b246-5d271bb0ab89",
          "title": "Get user details",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "dd88b895-1e5c-48bb-9273-6f446523a26a",
              "title": "GET /public/v2/users/${userId}",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Test GET request",
                  "fullTitle": "Get user details GET /public/v2/users/${userId} Test GET request",
                  "timedOut": null,
                  "duration": 424,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: `/public/v2/users/${userId}`,\n  headers: {\n    'authorization': 'Bearer ' + Cypress.env('access_token') // Generate access token from https://gorest.co.in/consumer/login and add the same to cypress.env.json\n  }\n}).then(response => {\n  expect(response).to.have.property('status').to.equal(200);\n  expect(response.body).to.have.property('name').to.equal(userName);\n  expect(response.body).to.have.property('email').to.equal(emailId);\n  cy.task('log', 'Retrieved user with id: ' + userId);\n});",
                  "err": {},
                  "uuid": "38d5eb0e-2963-4a01-b2e7-e76f2d29ec60",
                  "parentUUID": "dd88b895-1e5c-48bb-9273-6f446523a26a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "38d5eb0e-2963-4a01-b2e7-e76f2d29ec60"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 424,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "195ae475-8b2e-44d2-986a-08406eaa390b",
          "title": "Update user details",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5cbcf7d3-1ac2-4111-9887-44350dc497b9",
              "title": "PUT /public/v2/users/${userId}",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Test PUT request",
                  "fullTitle": "Update user details PUT /public/v2/users/${userId} Test PUT request",
                  "timedOut": null,
                  "duration": 442,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'PUT',\n  url: `/public/v2/users/${userId}`,\n  headers: {\n    'authorization': 'Bearer ' + Cypress.env('access_token') // Generate access token from https://gorest.co.in/consumer/login and add the same to cypress.env.json\n  },\n  body: {\n    \"name\": \"Updated Name\",\n    \"gender\": \"male\",\n    \"email\": \"updatedemail@domain.com\",\n    \"status\": \"active\"\n  }\n}).then(response => {\n  expect(response).to.have.property('status').to.equal(200);\n  expect(response.body).to.have.property('name').to.equal(\"Updated Name\");\n  expect(response.body).to.have.property('email').to.equal(\"updatedemail@domain.com\");\n  cy.task('log', 'Updated user with id: ' + userId);\n});",
                  "err": {},
                  "uuid": "41ff9e95-e446-45ed-8335-7425b00bbbf2",
                  "parentUUID": "5cbcf7d3-1ac2-4111-9887-44350dc497b9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "41ff9e95-e446-45ed-8335-7425b00bbbf2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 442,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "101eda10-2156-4149-8482-eb2da9d03389",
          "title": "Delete user",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "40328617-5c1a-437d-a922-deae72f82081",
              "title": "DELETE /public/v2/users/${userId}",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Test DELETE request",
                  "fullTitle": "Delete user DELETE /public/v2/users/${userId} Test DELETE request",
                  "timedOut": null,
                  "duration": 470,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'DELETE',\n  url: `/public/v2/users/${userId}`,\n  headers: {\n    'authorization': 'Bearer ' + Cypress.env('access_token') // Generate access token from https://gorest.co.in/consumer/login and add the same to cypress.env.json\n  }\n}).then(response => {\n  expect(response).to.have.property('status').to.equal(204);\n  expect(response.body).to.be.empty;\n  cy.task('log', 'Deleted user with id: ' + userId);\n});",
                  "err": {},
                  "uuid": "4ba8905c-b923-4fa1-a529-b3c64ba30fff",
                  "parentUUID": "40328617-5c1a-437d-a922-deae72f82081",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ba8905c-b923-4fa1-a529-b3c64ba30fff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 470,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}